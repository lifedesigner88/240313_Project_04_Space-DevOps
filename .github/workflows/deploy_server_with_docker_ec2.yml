name: Deploy to Ec2 With docker

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 우분투에 도커가 들어있다.
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Image
        working-directory: ./ordering_server
        run: docker build -t lifedesigner88/ordering-backend:v2 .

      - name: DockerHub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to DockerHub
        run: docker push lifedesigner88/ordering-backend:v2

      - name: ec2 ssh login and docker run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST1 }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          # type docker : docker 명령어가 현재 시스템에 존재하는 지 확인
          # /dev/null : 명령어의 출력을 무시할때 사용
          # curl -s http응답을 받아본다.
          script: |
            if ! type docker > /dev/null ; then
              curl -s https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
            fi
            sudo docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

            sudo docker pull lifedesigner88/ordering-backend:v2
            sudo docker rm -f ordering-backend || ture

            sudo docker run -d --name ordering-backend -p 80:8080 \
            -e SPRING_DATASOURCE_URL=jdbc:mariadb://${{ secrets.DB_HOST }}:3306/ordering \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} lifedesigner88/ordering-backend:v2
